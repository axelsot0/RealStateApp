// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealStateApp.Infraestructure.Persistence.Contexts;

#nullable disable

namespace RealStateApp.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProfilePhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agentes", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgenteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("Chats", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProfilePhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Desarrollador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Desarrolladores", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Mejora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mejoras", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Mensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Mensajes", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cifra")
                        .HasColumnType("decimal(12,4)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PropiedadId");

                    b.ToTable("Ofertas", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenteId")
                        .HasColumnType("int");

                    b.Property<int>("Banios")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("Habitaciones")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(12,4)");

                    b.Property<decimal>("Terreno")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("TipoPropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("TipoPropiedadId");

                    b.HasIndex("TipoVentaId");

                    b.ToTable("Propiedades", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropiedadCliente", b =>
                {
                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.HasKey("PropiedadId", "ClienteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("PropiedadesClientes", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropiedadImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("PropiedadImagenes", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropiedadMejora", b =>
                {
                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<int>("MejoraId")
                        .HasColumnType("int");

                    b.HasKey("PropiedadId", "MejoraId");

                    b.HasIndex("MejoraId");

                    b.ToTable("PropiedadMejoras", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.TipoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPropiedades", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.TipoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVentas", (string)null);
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Chat", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("Chats")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Mensaje", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Chat", "Chat")
                        .WithMany("Mensajes")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Oferta", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("Ofertas")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Agente", "Agente")
                        .WithMany("Propiedades")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.TipoPropiedad", "TipoPropiedad")
                        .WithMany("Propiedades")
                        .HasForeignKey("TipoPropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.TipoVenta", "TipoVenta")
                        .WithMany("Propiedades")
                        .HasForeignKey("TipoVentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("TipoPropiedad");

                    b.Navigation("TipoVenta");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropiedadCliente", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Favoritas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("PropiedadClientes")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropiedadImagen", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("Imagenes")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.PropiedadMejora", b =>
                {
                    b.HasOne("RealStateApp.Core.Domain.Entities.Mejora", "Mejora")
                        .WithMany("Propiedades")
                        .HasForeignKey("MejoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateApp.Core.Domain.Entities.Propiedad", "Propiedad")
                        .WithMany("Mejoras")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mejora");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Agente", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Chat", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Favoritas");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Mejora", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.Propiedad", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Imagenes");

                    b.Navigation("Mejoras");

                    b.Navigation("Ofertas");

                    b.Navigation("PropiedadClientes");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.TipoPropiedad", b =>
                {
                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("RealStateApp.Core.Domain.Entities.TipoVenta", b =>
                {
                    b.Navigation("Propiedades");
                });
#pragma warning restore 612, 618
        }
    }
}
